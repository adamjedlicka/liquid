import { lazy, Suspense, Switch, Match } from 'solid-js'
import { isServer } from 'solid-js/web'
import { Provider, useLayout } from 'liquid-js/core/Layouts'
import { useServerContext } from 'liquid-js'

<%_ for (const layout of layouts) { _%>
const _<%- layout.ident -%> = (props) => {
  if (isServer) {
    const ctx = useServerContext()

    ctx.layout = '<%- layout.component -%>'
  }

  const Component = lazy(() => import('<%- layout.component -%>'))

  return <Component {...props} />
}
<%_ } _%>

export default (props) => {
  return (
    <Provider>
      <Suspense>
        <Layouts>{props.children}</Layouts>
      </Suspense>
    </Provider>
  )
}

const Layouts = (props) => {
  const { layout } = useLayout()

  return (
    <Switch>
      <%_ for (const layout of layouts) { _%>
      <Match when={'<%- layout.ident -%>' === layout()}>
        <_<%- layout.ident -%>>{props.children}</_<%- layout.ident -%>>
      </Match>
      <%_ } _%>
    </Switch>
  )
}
